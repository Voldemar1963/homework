# Задача 3.1.
# Создайте класс матрицы (или таблицы).
# Требования к классу:
#   - каждая колонка является числом от 1 до n (n любое число, которые вы поставите!)
#   - в каждой ячейке содержится либо число, либо None
#   - доступы следующие методы матрицы:
#       * принимать новые значения, 
#       * заменять существующие значения, 
#       * выводить число строк и колонок.

# Пример матрицы 10 на 10 из единиц:
# [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]

# Примечание! 
#   - новый класс не запрещено строить на базе существующих типов данных: списков, словарей и тд.
#   - отображать в таблице/матрице название колонки не обязательно!
#   - использовать готовые классы numpy.array() и pandas.DataFrame() запрещено!
#   - проявите фантазию :)



# Решение

class Matrix:
    # Конструктор принимает размер матрицы, и необязательный параметр - начальное значение в ячейках
    def __init__(self, n, initial_value = None):
        self.n = n
        if initial_value is None:
            self.data = [[None] * n for i in range(n)]
        else:
            self.data = [[initial_value] * n for i in range(n)]
    # Установить значение в ячейке с координатами (row-строка, col-колонка)
    def set_value(self, row, col, value):
        self.data[row][col] = value
    
    # Получить значение из ячейки с координатами (row-строка, col-колонка)
    def get_value(self, row, col):
        return self.data[row][col]
    
    # Получить размер матрицы
    def inspect(self):
        return str(len(self.data)) + ',' + str(len(self.data[0]))

    # Печать матрицы
    def __str__(self):
        return_str = ""
        for row in self.data:
            return_str += str(row).replace('[','').replace(']','') + "\n"
        return return_str


#Пример использования

#Создаем матрицу 10х10 со значением 0 в ячейках
m = Matrix(10,0)

#Получение размеар матрицы
print('Размер матрицы: ' + m.inspect())

#Установка значения в ячейке матрицы
m.set_value(2,2,999)

# Чтение содержимого из ячейки матрицы
print('Значение в ячейке 2,2: ' + str(m.get_value(2,2)))

# Печать матрицы
print(m)
 